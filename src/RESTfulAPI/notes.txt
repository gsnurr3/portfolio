Pushlish app for production with Windows IIS Manager:
Open PowerShell with Admin
cd "P:\Code Porfolio\portfolio\src\RESTfulAPI\"
dotnet publish -c Release -o out --no-restore
robocopy .\out\  C:\inetpub\RESTfulAPI  /MIR /NFL /NDL /XF web.config

Azure Database Production To-Do:
1. Connectivity Method: Move to private endpoint when VNet / Private Link setup
2. Current Client IP: Remove home IP once jump box or bastion host setup
3. MS Defender for SQL: Turn on for production
4. Ledger: Turn on for immutable blockchain-style (financial, supply-chain, etc.)
5. Server identity: Enable to call other Azure resources
6. Transparent Data Encryption: Managed key by Azure Key Vault
7. Always Encrypted: Turn on for PII
8. Tags: Can be created for creating filters / groups, such as per environment, project, etc.

Azure CLI Login:
1. Run Powershell in Admin
2. az login 

Initial EF Core Migration:

    AppDbContext:
    dotnet ef migrations add UpdateLogSchema_App --context AppDbContext --output-dir Persistence/Migrations/App -s src/RESTfulAPI -p src/RESTfulAPI
    dotnet ef database update --context AppDbContext -s src/RESTfulAPI -p src/RESTfulAPI

    LogDbContext:
    dotnet ef migrations add UpdateLogSchema_Log --context LogDbContext --output-dir Persistence/Migrations/Log -s src/RESTfulAPI -p src/RESTfulAPI
    dotnet ef database update --context LogDbContext -s src/RESTfulAPI -p src/RESTfulAPI

Point EF at your “Production” settings:
$Env:ASPNETCORE_ENVIRONMENT = "Production"
$Env:ConnectionStrings__AzureSql = "Server=tcp:portfolio-sql-server-84.database.windows.net;Initial Catalog=portfolio-db;Authentication=Active Directory Default;Encrypt=True;TrustServerCertificate=False"

Apply the AppDbContext migration
dotnet ef database update --context AppDbContext --project src/RESTfulAPI --startup-project src/RESTfulAPI

Apply the LogDbContext migration
dotnet ef database update --context LogDbContext --project src/RESTfulAPI --startup-project src/RESTfulAPI

